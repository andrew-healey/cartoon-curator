{"version":3,"sources":["js/util.js","js/components/ComicChoice.js","js/components/Comic.js","js/pages/Newspaper.js","js/pages/Editor.js","js/App.js","index.js"],"names":["API_URL","window","location","origin","startsWith","getCookie","name","unescape","document","cookie","replace","RegExp","ComicChoice","Component","constructor","props","super","this","state","strips","findStrips","render","className","onChange","event","updateValue","target","value","Object","keys","sort","last","next","map","i","key","fetch","json","newStrips","series","console","log","indSeries","reduce","id","provider","setState","Media","mediaType","alt","Comic","date","shown","undefined","mediaRef","React","createRef","newProps","oldState","componentDidMount","findUrl","current","play","err","componentDidUpdate","thisComic","url","role","aria-label","onClick","remove","ref","rel","as","href","previous","src","autoplay","onLoad","type","setDate","val","updateVals","encodeURIComponent","then","resp","includes","getUrl","error","order","oldKeys","filter","length","Newspaper","search","URLSearchParams","get","Date","comics","zip","rows","slice","ind","getAll","JSON","parse","moment","format","title","newComics","comic","setURL","addDays","index","newVal","popComic","path","addComic","assign","newThing","list","ret","splice","numDays","newDate","getDate","applyDate","str","doQuery","mom","delete","append","forEach","escape","stringify","part","set","history","pushState","toString","App","currJson","first","password","output","apiUrl","toEdit","res","text","replaceAll","copyToClipboard","navigator","clipboard","writeText","editorProps","style","outerBox","flexGrow","height","container","width","theme","size","evt","query","runJSON","placeholder","tempJson","jsObject","tempStr","maxWidth","readOnly","parsed","method","mode","headers","body","alert","message","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5d4abf60.chunk.js","sourcesContent":["// import 'url-search-params-polyfill';\r\n// /*import 'core-js';*/\r\n// import 'core-js/features/promise';\r\n// import 'core-js/features/array/includes';\r\n// import 'core-js/web/url-search-params';\r\n// import 'whatwg-fetch';\r\n\r\nconst API_URL = window.location.origin.startsWith('http://localhost:') ? \"http://localhost:3000\" : \"https://comic-strip-api.herokuapp.com\" /*\"https://Comic-Strip-API.426729.repl.co\"*/ ;\r\nconst API_VERSION = \"v1\";\r\nconst SAVE_AS_URL = false;\r\n\r\nfunction dateFromPath(path) {\r\n    return path.replace(/\\/[^/]*\\/(.*)$/g, \"$1\");\r\n}\r\n\r\nfunction getCookie(name) {\r\n    return unescape(document.cookie.replace(new RegExp(\"(?:(?:^|.*;\\\\s*)\" + name + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\"));\r\n}\r\n\r\nexport {\r\n    API_URL,\r\n    API_VERSION,\r\n    dateFromPath,\r\n    getCookie,\r\n    SAVE_AS_URL\r\n};\r\n","import React, {\r\n    Component\r\n} from 'react';\r\nimport {\r\n    API_URL,\r\n    API_VERSION\r\n} from '../util';\r\n//TODO Comply with the v1 api and the new provider attribute\r\nexport default class ComicChoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            strips: {\r\n                \"Select\": \"\"\r\n            }\r\n        };\r\n        this.findStrips();\r\n    }\r\n    render() {\r\n            return <select className = \"comic-choice\"\r\n            onChange = {\r\n                event => this.props.updateValue({\r\n                    name: event.target.value,\r\n                    ...this.state.strips[event.target.value]\r\n                })\r\n            } > {\r\n                Object.keys(this.state.strips).sort((last, next) => next > last).map(i => < option key = {\r\n                        i\r\n                    }\r\n                    value = {\r\n                        i\r\n                    } > {\r\n                        i\r\n                    } < /option>)} <\r\n                    /select>;\r\n                }\r\n                async findStrips() {\r\n                    let strips = await fetch(`${API_URL}/api/${API_VERSION}/ids`);\r\n                    strips = await strips.json();\r\n                    let newStrips = {\r\n                        \"Select\": [null, null]\r\n                    };\r\n                    for (let key of Object.keys(strips)) {\r\n                        const series = strips[key];\r\n                        console.log(series);\r\n                        const indSeries = series.reduce((last, next) => ({\r\n                            ...last,\r\n                            [next]: {\r\n                                id: next,\r\n                                provider: key\r\n                            }\r\n                        }), {});\r\n                        newStrips = {\r\n                            ...newStrips,\r\n                            ...indSeries\r\n                        };\r\n                    }\r\n                    console.log(newStrips);\r\n                    this.setState({\r\n                        strips: newStrips\r\n                    });\r\n                }\r\n            }","import React, {\r\n    Component\r\n} from \"react\";\r\nimport {\r\n    API_URL,\r\n    API_VERSION,\r\n} from \"../util\";\r\nimport ComicChoice from \"./ComicChoice\";\r\n\r\nconst Media = (props) => props.mediaType === \"video\" ? < video {\r\n    ...props\r\n} > < /video>:<img alt={props.alt} {...props}/ > ;\r\n\r\nexport default class Comic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: this.props.date || \"\",\r\n            strips: {},\r\n            shown: true,\r\n            id: this.props.id,\r\n            name: undefined,\r\n            provider: this.props.provider,\r\n            mediaType: this.props.mediaType\r\n        };\r\n        this.mediaRef = React.createRef();\r\n    }\r\n    static getDerivedStateFromProps(newProps, oldState) {\r\n        return newProps.date !== oldState.date ? {\r\n            date: newProps.date\r\n        } : null;\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.id) this.findUrl(this.state.date);\r\n        try {\r\n            this.mediaRef.current.play();\r\n        } catch (err) {\r\n\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        this.findUrl();\r\n        try {\r\n            this.mediaRef.current.play();\r\n        } catch (err) {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        let thisComic = this.state.strips[this.state.date] || {};\r\n        console.log(\"mediaType\", this.state.mediaType);\r\n\r\n        return this.state.date !== \"\" && this.state.id ? (\r\n            thisComic.url ? ( <\r\n                div className = \"comic-container\" >\r\n                <\r\n                h2 > {\r\n                    this.state.name\r\n                } < /h2> <\r\n                p > {\r\n                    this.state.date\r\n                } < /p> <\r\n                span role = \"img\"\r\n                aria-label = \"Delete\"\r\n                onClick = {\r\n                    this.props.remove\r\n                } > ❌\r\n                <\r\n                /span> <\r\n                div className = \"comic\" >\r\n                <\r\n                link ref = \"previous\"\r\n                rel = \"preload\"\r\n                as = \"image\"\r\n                href = {\r\n                    (this.state.strips[thisComic.previous] || {}).url\r\n                }\r\n                /> <\r\n                Media ref = {\r\n                    this.mediaRef\r\n                }\r\n                alt = {\r\n                    this.state.name || this.state.id + \" comic strip\"\r\n                }\r\n                src = {\r\n                    thisComic.url\r\n                }\r\n                mediaType = {\r\n                    thisComic.mediaType\r\n                }\r\n                autoplay = \"autoplay\"\r\n                onLoad = {\r\n                    function() {\r\n                        console.log(\"Loaded\");\r\n                        this.play();\r\n                    }\r\n                }\r\n                /> <\r\n                link ref = \"next\"\r\n                rel = \"preload\"\r\n                as = \"image\" // TODO support video preloading\r\n                href = {\r\n                    (this.state.strips[thisComic.next] || {}).url\r\n                }\r\n                /> <\r\n                div className = \"overlay\" >\r\n                <\r\n                input type = \"button\"\r\n                onClick = {\r\n                    () => this.props.setDate(thisComic.previous)\r\n                }\r\n                value = \"\"\r\n                className = \"arrow\" /\r\n                >\r\n                <\r\n                input type = \"button\"\r\n                onClick = {\r\n                    () => this.props.setDate(thisComic.next)\r\n                }\r\n                value = \"\"\r\n                className = \"arrow\" /\r\n                >\r\n                <\r\n                /div> <\r\n                /div> <\r\n                /div>\r\n            ) : null\r\n        ) : ( <\r\n            div className = \"input-container\" >\r\n            <\r\n            ComicChoice updateValue = {\r\n                val => {\r\n                    console.log(\"updateValue\", val);\r\n                    this.props.updateVals({\r\n                        id: val.id,\r\n                        name: val.name,\r\n                        provider: val.provider\r\n                    })\r\n                }\r\n            }\r\n            /> <\r\n            /div>\r\n        );\r\n    }\r\n    async findUrl(date) {\r\n        if (!(this.state.id && this.state.provider)) return;\r\n        if (this.state.id && this.state.provider && !this.state.name) {\r\n            fetch(`${API_URL}/api/${API_VERSION}/${encodeURIComponent(this.state.provider)}/${encodeURIComponent(this.state.id)}`)\r\n                .then(resp => resp.json()).then(json => this.setState({\r\n                    name: json.name\r\n                }));\r\n        }\r\n        date = date || this.state.date;\r\n        let thisComic,\r\n            strips = {};\r\n        if (!Object.keys(this.state.strips).includes(date)) {\r\n            let url = this.getUrl(date);\r\n            let json = await fetch(url);\r\n            json = await json.json();\r\n            if (!json || json.error) {\r\n                console.log(url, \"failed\");\r\n            }\r\n            thisComic = json || undefined;\r\n        } else {\r\n            thisComic = this.state.strips[date];\r\n        }\r\n        strips[date] = thisComic || undefined;\r\n        if (this.state.date !== date) {\r\n            this.setState({\r\n                date,\r\n                strips\r\n            });\r\n        }\r\n        for (let order of [\"previous\", \"next\"]) {\r\n            if (!this.state.strips[thisComic[order]] &&\r\n                thisComic[order] &&\r\n                thisComic[order] !== \"\"\r\n            ) {\r\n                let url = this.getUrl(thisComic[order]);\r\n                let json = await fetch(url);\r\n                try {\r\n                    json = await json.json();\r\n                } catch (err) {\r\n                    continue;\r\n                }\r\n                strips[thisComic[order]] = json || undefined;\r\n            } else {\r\n                strips[thisComic[order]] = this.state.strips[thisComic[order]];\r\n            }\r\n        }\r\n        let oldKeys = Object.keys(this.state.strips);\r\n        if (Object.keys(strips).filter(i => !oldKeys.includes(i)).length > 0) {\r\n            this.setState({\r\n                strips\r\n            });\r\n        }\r\n    }\r\n    getUrl(date) {\r\n        return `${API_URL}/api/${API_VERSION}/${encodeURIComponent(this.state.provider)}/${encodeURIComponent(this.state.id)}/${date}`\r\n    }\r\n}\r\n","import moment from \"moment\";\r\nimport React, {\r\n    Component\r\n} from \"react\";\r\nimport Comic from \"../components/Comic\";\r\nimport {\r\n    getCookie,\r\n    SAVE_AS_URL,\r\n} from \"../util\";\r\n\r\nexport default class Newspaper extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let search = new URLSearchParams(window.location.search);\r\n        this.url = search;\r\n        this.state = {\r\n            date: [\"year\", \"month\", \"day\"].reduce(\r\n                    (last, next) => last || !search.get(next),\r\n                    false\r\n                ) ?\r\n                new Date() : new Date(\r\n                    search.get(\"year\"),\r\n                    search.get(\"month\") - 1,\r\n                    search.get(\"day\")\r\n                ),\r\n            comics: []\r\n        };\r\n        const zip = (...rows) => rows.reduce((last, next) => last.slice(0, next.length).map((i, ind) => [i, next[ind]]));\r\n        let comics = zip(search.getAll(\"comic\"), search.getAll(\"provider\"))\r\n        comics = comics.length > 0 ? comics :\r\n            zip(JSON.parse(getCookie(\"comic\") || \"[]\"), JSON.parse(getCookie(\"provider\") || \"[]\"));\r\n        comics = comics.length > 0 ? comics.map(i => ({\r\n            id: i[0],\r\n            provider: i[1],\r\n        })) : [{\r\n                provider: \"gocomics\",\r\n                id: \"pearlsbeforeswine\",\r\n            },\r\n            {\r\n                provider: \"dilbert\",\r\n                id: \"dilbert\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"dilbert-classics\",\r\n            },\r\n            {\r\n                provider: \"xkcd\",\r\n                id: \"xkcd\",\r\n            },\r\n            {\r\n                provider: \"smbc\",\r\n                id: \"smbc\",\r\n            },\r\n            {\r\n                provider: \"comicskingdom\",\r\n                id: \"sherman-s-lagoon\",\r\n            },\r\n            {\r\n                provider: \"comicskingdom\",\r\n                id: \"dustin\",\r\n            },\r\n            {\r\n                provider: \"comicskingdom\",\r\n                id: \"rhymes-with-orange\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"lio\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"calvinandhobbes\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"foxtrot\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"garfield\",\r\n            }\r\n        ];\r\n        this.state.comics = comics;\r\n        let date = moment(this.state.date).format(\"YYYY/M/D\");\r\n        document.title = moment(this.state.date).format(\"MMMM D[, ]YYYY\");\r\n        let newComics = this.state.comics.map(comic => ({\r\n            ...comic,\r\n            date\r\n        }));\r\n        this.state.comics = newComics;\r\n        if (search.get(\"sync\") === \"true\") this.setURL(this.state.comics, this.state.date, true);\r\n    }\r\n    render() {\r\n        return ( <\r\n            div className = \"App\" >\r\n            <\r\n            div className = \"navBar\" >\r\n            <\r\n            button onClick = {\r\n                () => this.addDays(-1)\r\n            }\r\n            className = \"changeDate\" >\r\n            &\r\n            lt; <\r\n            /button> <\r\n            h1 className = \"title\" > Cartoon Curator < /h1> <\r\n            button onClick = {\r\n                () => this.addDays(1)\r\n            }\r\n            className = \"changeDate next\" >\r\n            &\r\n            gt; <\r\n            /button> <\r\n            /div> <\r\n            div className = \"body\" > {\r\n                this.state.comics.map((i, index) => ( <\r\n                    Comic updateVals = {\r\n                        newVal => this.updateValue(index, newVal)\r\n                    }\r\n                    remove = {\r\n                        () => this.popComic(index)\r\n                    }\r\n                    setDate = {\r\n                        path => this.setDate(index, path)\r\n                    }\r\n                    key = {\r\n                        i.id\r\n                    }\r\n                    date = {\r\n                        i.date\r\n                    }\r\n                    id = {\r\n                        i.id\r\n                    }\r\n                    provider = {\r\n                        i.provider\r\n                    }\r\n                    mediaType = {\r\n                        i.mediaType\r\n                    }\r\n                    />\r\n                ))\r\n            } <\r\n            div className = \"input-container\" >\r\n            <\r\n            input type = \"button\"\r\n            onClick = {\r\n                () => this.addComic()\r\n            }\r\n            className = \"plus\"\r\n            value = \"+\" /\r\n            >\r\n            <\r\n            /div> <\r\n            /div> <\r\n            /div>\r\n        );\r\n    }\r\n    addComic() {\r\n        this.setState({\r\n            comics: [\r\n                ...this.state.comics,\r\n                {\r\n                    id: \"\",\r\n                    name: \"\",\r\n                    date: moment(this.state.date).format(\"YYYY/M/D\")\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    updateValue(index, value) {\r\n        let comics = [...this.state.comics];\r\n        comics[index] = Object.assign({}, comics[index], value);\r\n        this.setURL(comics);\r\n        this.setState({\r\n            comics\r\n        });\r\n    }\r\n    setDate(id, path) {\r\n        let newComics = [...this.state.comics];\r\n        let newThing = {\r\n            ...newComics[id]\r\n        };\r\n        newThing.date = path;\r\n        newComics[id] = newThing;\r\n        this.setState({\r\n            comics: newComics\r\n        });\r\n    }\r\n    popComic(index) {\r\n        let list = [...this.state.comics];\r\n        let ret = list.splice(index, 1);\r\n        this.setState({\r\n            comics: list\r\n        });\r\n        this.setURL(list);\r\n        return ret;\r\n    }\r\n    addDays(numDays) {\r\n        let newDate = new Date(this.state.date);\r\n        newDate.setDate(this.state.date.getDate() + numDays);\r\n        // this.state.date=newDate;\r\n        this.applyDate(newDate);\r\n    }\r\n    applyDate(date) {\r\n        let mom = moment(date);\r\n        let str = mom.format(\"YYYY/M/D\");\r\n        let newComics = this.state.comics.map(comic => ({\r\n            ...comic,\r\n            date: str\r\n        }));\r\n        this.setURL(undefined, str);\r\n        // window.history.pushState(date, moment(date).format(\"MMMM D[,] YYYY\"), this.url.toString()/*moment(date).format(\"[?year=]YYYY[&month=]M[&day=]D\")*/);\r\n        this.setState({\r\n            date,\r\n            comics: newComics\r\n        });\r\n    }\r\n    setURL(comics, date = this.state.date, doQuery = false) {\r\n        let mom = moment(date);\r\n        //   alert(this.url);\r\n        if (comics) {\r\n            this.url.delete(\"comic\");\r\n            this.url.delete(\"provider\");\r\n            if (SAVE_AS_URL || doQuery) {\r\n                for (let comic of comics) {\r\n                    this.url.append(\"comic\", comic.id);\r\n                    this.url.append(\"provider\", comic.provider);\r\n                }\r\n            }\r\n            //const sanitize = m => m.replace(/,/g, \",,\").replace(/;/g, \" , \");\r\n            [\r\n                [\"id\", \"comic\"],\r\n                [\"provider\", \"provider\"]\r\n            ].forEach(([key, name]) => {\r\n                document.cookie = name + \"=\" + escape(JSON.stringify(comics.map(comic => comic[key])))\r\n            });\r\n        }\r\n        if (date) {\r\n            const dateStuff = [\r\n                [\"year\", \"YYYY\"],\r\n                [\"month\", \"M\"],\r\n                [\"day\", \"D\"]\r\n            ];\r\n            dateStuff.forEach(([part, format]) => {\r\n                const val = mom.format(format);\r\n                this.url.set(part, val);\r\n                document.cookie = `${part}=${val}`;\r\n            });\r\n        }\r\n        window.history.pushState(\r\n            date,\r\n            moment(date).format(\"MMMM D[,] YYYY\"),\r\n            \"?\" + this.url.toString()\r\n        );\r\n    }\r\n}","/*eslint-disable no-template-curly-in-string*/\n/*eslint-disable react/no-direct-mutation-state*/\n/*eslint-disable no-unused-vars*/\n/*eslint-disable jsx-a11y/alt-text*/\n/*eslint-disable no-mixed-operators*/\nimport React from 'react';\nimport '../../css/Editor.css';\nimport Editor from 'react-json-editor-ajrm';\nimport {\n    API_URL\n} from '../util';\n\nclass App extends React.Component {\n    constructor(props) {\n        document.title = \"Editor\";\n        super(props);\n        this.state = {\n            currJson: ({\n                id: \"\",\n                name: \"\",\n                \"series-ids\": [\"YYYY-MM-DD\"],\n                \"date-scrape\": [],\n                \"extremes-scrape\": {\n                    first: [],\n                    last: []\n                },\n                \"get-name\": [],\n                \"src-to-url\": \"${src}\",\n                \"list-names\": [],\n            }),\n            password: \"\",\n            output: {},\n            apiUrl: API_URL + \"/api/v1/\",\n        };\n        const search = new URLSearchParams(window.location.search);\n        const toEdit = search.get(\"edit\");\n        if (toEdit) fetch(API_URL + \"/api/v1/\" + toEdit).then(res => res.text()).then(text => this.setState({\n            currJson: JSON.parse(text.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))\n        }));\n    }\n\n    copyToClipboard() {\n        navigator.clipboard.writeText(JSON.stringify(this.state.currJson, null));\n    }\n\n    render() {\n        const editorProps = {\n            style: {\n                outerBox: {\n                    flexGrow: \"1\",\n                    height: \"100%\"\n                },\n                container: {\n                    width: \"100%\",\n                    height: \"100%\"\n                }\n            },\n            theme: \"light_mitsuketa_tribute\"\n        };\n        return ( <\n            div className = \"Editor\" >\n            Password: < input type = \"password\"\n            size = \"50\"\n            value = {\n                this.state.password\n            }\n            onChange = {\n                (evt) => this.setState({\n                    password: evt.target.value\n                })\n            } > < /input> <\n            br / >\n            API URL: < input type = \"text\"\n            size = \"50\"\n            value = {\n                this.state.apiUrl\n            }\n            onChange = {\n                (evt) => this.setState({\n                    apiUrl: evt.target.value\n                })\n            } > < /input> <\n            br / >\n            Query Path: < input type = \"text\"\n            size = \"50\"\n            value = {\n                this.state.query\n            }\n            onChange = {\n                (evt) => this.setState({\n                    query: evt.target.value\n                })\n            } > < /input> <\n            input type = \"button\"\n            value = \"Test\"\n            onClick = {\n                () => this.runJSON()\n            }\n            /> <\n            br / >\n            <\n            input type = \"button\"\n            value = \"Copy to Clipboard\"\n            onClick = {\n                () => this.copyToClipboard()\n            }\n            /> <\n            div className = \"textarea-holder\" >\n            <\n            Editor placeholder = {\n                this.state.currJson\n            }\n            onChange = {\n                (evt) => {\n                    this.state.tempJson = evt.jsObject;\n                    this.state.tempStr = evt.json;\n                }\n            } {\n                ...editorProps\n            }\n            /> <\n            img className = \"sample-image\"\n            src = {\n                this.state.output.url\n            }\n            style = {\n                {\n                    maxWidth: \"49vw\",\n                    height: \"auto\"\n                }\n            }\n            /> <\n            Editor readOnly placeholder = {\n                (this.state.output)\n            } {\n                ...editorProps\n            }\n            />> <\n            /div> <\n            br / >\n            <\n            /div>\n        );\n    }\n    async runJSON() {\n        try {\n            const parsed = this.state.tempJson || this.state.currJson;\n            this.setState({\n                currJson: this.state.tempStr && JSON.parse(this.state.tempStr.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")) || this.state.tempJson\n            });\n            const didPost = await (await fetch(this.state.apiUrl + \"provider\", {\n                method: \"POST\",\n                mode: 'cors',\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    json: parsed,\n                    password: this.state.password,\n                })\n            })).json()\n            const output = await (await fetch(this.state.apiUrl + this.state.query)).json();\n            this.setState({\n                output: output || {}\n            });\n        } catch (err) {\n            alert(err.message);\n        }\n    }\n}\n\nexport default App;","import './util';\r\nimport 'core-js';\r\nimport 'isomorphic-fetch';\r\nimport React, {\r\n    Component\r\n} from 'react';\r\nimport Newspaper from './pages/Newspaper';\r\nimport '../css/App.css';\r\nimport Editor from './pages/Editor';\r\n\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Switch,\r\n} from 'react-router-dom';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return ( <\r\n            Router >\r\n            <\r\n            Switch >\r\n            <\r\n            Route path = \"/editor\" >\r\n            <\r\n            Editor / >\r\n            <\r\n            /Route> <\r\n            Route path = \"/\" >\r\n            <\r\n            Newspaper / >\r\n            <\r\n            /Route> <\r\n            /Switch> <\r\n            /Router>\r\n        ); //Temporary--until I make Treasury\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './js/App';\r\n\r\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}
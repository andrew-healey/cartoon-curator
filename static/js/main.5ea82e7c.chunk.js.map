{"version":3,"sources":["js/util.js","js/components/ComicChoice.js","js/components/Comic.js","js/pages/Newspaper.js","js/pages/Editor.js","js/App.js","index.js"],"names":["API_URL","window","location","origin","startsWith","getCookie","name","unescape","document","cookie","replace","RegExp","ComicChoice","Component","constructor","props","super","this","state","strips","Select","findStrips","render","className","onChange","event","updateValue","target","value","Object","keys","sort","last","next","map","i","key","fetch","json","newStrips","series","console","log","indSeries","reduce","id","provider","setState","Media","mediaType","alt","Comic","date","shown","undefined","mediaRef","React","createRef","newProps","oldState","componentDidMount","findUrl","current","play","err","componentDidUpdate","thisComic","url","role","aria-label","onClick","remove","ref","rel","as","href","previous","src","autoplay","onLoad","type","setDate","val","updateVals","encodeURIComponent","then","resp","includes","getUrl","error","order","oldKeys","filter","length","Newspaper","search","URLSearchParams","get","Date","comics","zip","rows","slice","ind","getAll","JSON","parse","moment","format","title","newComics","comic","setURL","addDays","index","newVal","popComic","path","addComic","assign","newThing","list","ret","splice","numDays","newDate","getDate","applyDate","str","doQuery","mom","delete","append","forEach","escape","stringify","part","set","history","pushState","toString","App","currJson","first","password","output","apiUrl","toEdit","res","text","replaceAll","copyToClipboard","navigator","clipboard","writeText","editorProps","style","outerBox","flexGrow","height","container","width","theme","size","evt","query","runJSON","placeholder","tempJson","jsObject","tempStr","maxWidth","readOnly","parsed","method","mode","headers","body","alert","message","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5ea82e7c.chunk.js","sourcesContent":["// import 'url-search-params-polyfill';\n// /*import 'core-js';*/\n// import 'core-js/features/promise';\n// import 'core-js/features/array/includes';\n// import 'core-js/web/url-search-params';\n// import 'whatwg-fetch';\n\nconst API_URL = window.location.origin.startsWith(\"http://localhost:\")\n  ? \"http://localhost:3000\"\n  : \"https://comic-strip-api.herokuapp.com\";\nwindow.API_URL = API_URL;\nconst API_VERSION = \"v1\";\nconst SAVE_AS_URL = false;\n\nfunction dateFromPath(path) {\n  return path.replace(/\\/[^/]*\\/(.*)$/g, \"$1\");\n}\n\nfunction getCookie(name) {\n  return unescape(\n    document.cookie.replace(\n      new RegExp(\"(?:(?:^|.*;\\\\s*)\" + name + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"),\n      \"$1\"\n    )\n  );\n}\n\nexport { API_URL, API_VERSION, dateFromPath, getCookie, SAVE_AS_URL };\n","import React, { Component } from \"react\";\nimport { API_URL, API_VERSION } from \"../util\";\n//TODO Comply with the v1 api and the new provider attribute\nexport default class ComicChoice extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      strips: {\n        Select: \"\",\n      },\n    };\n    this.findStrips();\n  }\n  render() {\n    return (\n      <select\n        className=\"comic-choice\"\n        onChange={(event) =>\n          this.props.updateValue({\n            name: event.target.value,\n            ...this.state.strips[event.target.value],\n          })\n        }\n      >\n        {\" \"}\n        {Object.keys(this.state.strips)\n          .sort((last, next) => next > last)\n          .map((i) => (\n            <option key={i} value={i}>\n              {\" \"}\n              {i}{\" \"}\n            </option>\n          ))}{\" \"}\n      </select>\n    );\n  }\n  async findStrips() {\n    let strips = await fetch(`${API_URL}/api/${API_VERSION}/ids`);\n    strips = await strips.json();\n    let newStrips = {\n      Select: [null, null],\n    };\n    for (let key of Object.keys(strips)) {\n      const series = strips[key];\n      console.log(series);\n      const indSeries = series.reduce(\n        (last, next) => ({\n          ...last,\n          [next]: {\n            id: next,\n            provider: key,\n          },\n        }),\n        {}\n      );\n      newStrips = {\n        ...newStrips,\n        ...indSeries,\n      };\n    }\n    console.log(newStrips);\n    this.setState({\n      strips: newStrips,\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport { API_URL, API_VERSION } from \"../util\";\nimport ComicChoice from \"./ComicChoice\";\n\nconst Media = (props) =>\n  props.mediaType === \"video\" ? (\n    <video {...props}> </video>\n  ) : (\n    <img alt={props.alt} {...props} />\n  );\n\nexport default class Comic extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: this.props.date || \"\",\n      strips: {},\n      shown: true,\n      id: this.props.id,\n      name: undefined,\n      provider: this.props.provider,\n      mediaType: this.props.mediaType,\n    };\n    this.mediaRef = React.createRef();\n  }\n  static getDerivedStateFromProps(newProps, oldState) {\n    return newProps.date !== oldState.date\n      ? {\n          date: newProps.date,\n        }\n      : null;\n  }\n  componentDidMount() {\n    if (this.state.id) this.findUrl(this.state.date);\n    try {\n      this.mediaRef.current.play();\n    } catch (err) {}\n  }\n  componentDidUpdate() {\n    this.findUrl();\n    try {\n      this.mediaRef.current.play();\n    } catch (err) {}\n  }\n  render() {\n    let thisComic = this.state.strips[this.state.date] || {};\n    console.log(\"mediaType\", this.state.mediaType);\n\n    return this.state.date !== \"\" && this.state.id ? (\n      thisComic.url ? (\n        <div className=\"comic-container\">\n          <h2> {this.state.name} </h2> <p> {this.state.date} </p>{\" \"}\n          <span role=\"img\" aria-label=\"Delete\" onClick={this.props.remove}>\n            {\" \"}\n            ❌\n          </span>{\" \"}\n          <div className=\"comic\">\n            <link\n              ref=\"previous\"\n              rel=\"preload\"\n              as=\"image\"\n              href={(this.state.strips[thisComic.previous] || {}).url}\n            />{\" \"}\n            <Media\n              ref={this.mediaRef}\n              alt={this.state.name || this.state.id + \" comic strip\"}\n              src={thisComic.url}\n              mediaType={thisComic.mediaType}\n              autoplay=\"autoplay\"\n              onLoad={function () {\n                console.log(\"Loaded\");\n                this.play();\n              }}\n            />{\" \"}\n            <link\n              ref=\"next\"\n              rel=\"preload\"\n              as=\"image\" // TODO support video preloading\n              href={(this.state.strips[thisComic.next] || {}).url}\n            />{\" \"}\n            <div className=\"overlay\">\n              <input\n                type=\"button\"\n                onClick={() => this.props.setDate(thisComic.previous)}\n                value=\"\"\n                className=\"arrow\"\n              />\n              <input\n                type=\"button\"\n                onClick={() => this.props.setDate(thisComic.next)}\n                value=\"\"\n                className=\"arrow\"\n              />\n            </div>{\" \"}\n          </div>{\" \"}\n        </div>\n      ) : null\n    ) : (\n      <div className=\"input-container\">\n        <ComicChoice\n          updateValue={(val) => {\n            console.log(\"updateValue\", val);\n            this.props.updateVals({\n              id: val.id,\n              name: val.name,\n              provider: val.provider,\n            });\n          }}\n        />{\" \"}\n      </div>\n    );\n  }\n  async findUrl(date) {\n    if (!(this.state.id && this.state.provider)) return;\n    if (this.state.id && this.state.provider && !this.state.name) {\n      fetch(\n        `${API_URL}/api/${API_VERSION}/${encodeURIComponent(\n          this.state.provider\n        )}/${encodeURIComponent(this.state.id)}`\n      )\n        .then((resp) => resp.json())\n        .then((json) =>\n          this.setState({\n            name: json.name,\n          })\n        );\n    }\n    date = date || this.state.date;\n    let thisComic,\n      strips = {};\n    if (!Object.keys(this.state.strips).includes(date)) {\n      let url = this.getUrl(date);\n      let json = await fetch(url);\n      json = await json.json();\n      if (!json || json.error) {\n        console.log(url, \"failed\");\n      }\n      thisComic = json || undefined;\n    } else {\n      thisComic = this.state.strips[date];\n    }\n    strips[date] = thisComic || undefined;\n    if (this.state.date !== date) {\n      this.setState({\n        date,\n        strips,\n      });\n    }\n    for (let order of [\"previous\", \"next\"]) {\n      if (\n        !this.state.strips[thisComic[order]] &&\n        thisComic[order] &&\n        thisComic[order] !== \"\"\n      ) {\n        let url = this.getUrl(thisComic[order]);\n        let json = await fetch(url);\n        try {\n          json = await json.json();\n        } catch (err) {\n          continue;\n        }\n        strips[thisComic[order]] = json || undefined;\n      } else {\n        strips[thisComic[order]] = this.state.strips[thisComic[order]];\n      }\n    }\n    let oldKeys = Object.keys(this.state.strips);\n    if (Object.keys(strips).filter((i) => !oldKeys.includes(i)).length > 0) {\n      this.setState({\n        strips,\n      });\n    }\n  }\n  getUrl(date) {\n    return `${API_URL}/api/${API_VERSION}/${encodeURIComponent(\n      this.state.provider\n    )}/${encodeURIComponent(this.state.id)}/${date}`;\n  }\n}\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport Comic from \"../components/Comic\";\nimport { getCookie, SAVE_AS_URL } from \"../util\";\n\nexport default class Newspaper extends Component {\n  constructor(props) {\n    super(props);\n    let search = new URLSearchParams(window.location.search);\n    this.url = search;\n    this.state = {\n      date: [\"year\", \"month\", \"day\"].reduce(\n        (last, next) => last || !search.get(next),\n        false\n      )\n        ? new Date()\n        : new Date(\n            search.get(\"year\"),\n            search.get(\"month\") - 1,\n            search.get(\"day\")\n          ),\n      comics: [],\n    };\n    const zip = (...rows) =>\n      rows.reduce((last, next) =>\n        last.slice(0, next.length).map((i, ind) => [i, next[ind]])\n      );\n    let comics = zip(search.getAll(\"comic\"), search.getAll(\"provider\"));\n    comics =\n      comics.length > 0\n        ? comics\n        : zip(\n            JSON.parse(getCookie(\"comic\") || \"[]\"),\n            JSON.parse(getCookie(\"provider\") || \"[]\")\n          );\n    comics =\n      comics.length > 0\n        ? comics.map((i) => ({\n            id: i[0],\n            provider: i[1],\n          }))\n        : [\n            {\n              provider: \"gocomics\",\n              id: \"pearlsbeforeswine\",\n            },\n            {\n              provider: \"dilbert\",\n              id: \"dilbert\",\n            },\n            {\n              provider: \"gocomics\",\n              id: \"dilbert-classics\",\n            },\n            {\n              provider: \"xkcd\",\n              id: \"xkcd\",\n            },\n            {\n              provider: \"smbc\",\n              id: \"smbc\",\n            },\n            {\n              provider: \"comicskingdom\",\n              id: \"sherman-s-lagoon\",\n            },\n            {\n              provider: \"comicskingdom\",\n              id: \"dustin\",\n            },\n            {\n              provider: \"comicskingdom\",\n              id: \"rhymes-with-orange\",\n            },\n            {\n              provider: \"gocomics\",\n              id: \"lio\",\n            },\n            {\n              provider: \"gocomics\",\n              id: \"calvinandhobbes\",\n            },\n            {\n              provider: \"gocomics\",\n              id: \"foxtrot\",\n            },\n            {\n              provider: \"gocomics\",\n              id: \"garfield\",\n            },\n          ];\n    this.state.comics = comics;\n    let date = moment(this.state.date).format(\"YYYY/M/D\");\n    document.title = moment(this.state.date).format(\"MMMM D[, ]YYYY\");\n    let newComics = this.state.comics.map((comic) => ({\n      ...comic,\n      date,\n    }));\n    this.state.comics = newComics;\n    if (search.get(\"sync\") === \"true\")\n      this.setURL(this.state.comics, this.state.date, true);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"navBar\">\n          <button onClick={() => this.addDays(-1)} className=\"changeDate\">\n            & lt;{\" \"}\n          </button>{\" \"}\n          <h1 className=\"title\"> Cartoon Curator </h1>{\" \"}\n          <button onClick={() => this.addDays(1)} className=\"changeDate next\">\n            & gt;{\" \"}\n          </button>{\" \"}\n        </div>{\" \"}\n        <div className=\"body\">\n          {\" \"}\n          {this.state.comics.map((i, index) => (\n            <Comic\n              updateVals={(newVal) => this.updateValue(index, newVal)}\n              remove={() => this.popComic(index)}\n              setDate={(path) => this.setDate(index, path)}\n              key={i.id}\n              date={i.date}\n              id={i.id}\n              provider={i.provider}\n              mediaType={i.mediaType}\n            />\n          ))}{\" \"}\n          <div className=\"input-container\">\n            <input\n              type=\"button\"\n              onClick={() => this.addComic()}\n              className=\"plus\"\n              value=\"+\"\n            />\n          </div>{\" \"}\n        </div>{\" \"}\n      </div>\n    );\n  }\n  addComic() {\n    this.setState({\n      comics: [\n        ...this.state.comics,\n        {\n          id: \"\",\n          name: \"\",\n          date: moment(this.state.date).format(\"YYYY/M/D\"),\n        },\n      ],\n    });\n  }\n  updateValue(index, value) {\n    let comics = [...this.state.comics];\n    comics[index] = Object.assign({}, comics[index], value);\n    this.setURL(comics);\n    this.setState({\n      comics,\n    });\n  }\n  setDate(id, path) {\n    let newComics = [...this.state.comics];\n    let newThing = {\n      ...newComics[id],\n    };\n    newThing.date = path;\n    newComics[id] = newThing;\n    this.setState({\n      comics: newComics,\n    });\n  }\n  popComic(index) {\n    let list = [...this.state.comics];\n    let ret = list.splice(index, 1);\n    this.setState({\n      comics: list,\n    });\n    this.setURL(list);\n    return ret;\n  }\n  addDays(numDays) {\n    let newDate = new Date(this.state.date);\n    newDate.setDate(this.state.date.getDate() + numDays);\n    // this.state.date=newDate;\n    this.applyDate(newDate);\n  }\n  applyDate(date) {\n    let mom = moment(date);\n    let str = mom.format(\"YYYY/M/D\");\n    let newComics = this.state.comics.map((comic) => ({\n      ...comic,\n      date: str,\n    }));\n    this.setURL(undefined, str);\n    // window.history.pushState(date, moment(date).format(\"MMMM D[,] YYYY\"), this.url.toString()/*moment(date).format(\"[?year=]YYYY[&month=]M[&day=]D\")*/);\n    this.setState({\n      date,\n      comics: newComics,\n    });\n  }\n  setURL(comics, date = this.state.date, doQuery = false) {\n    let mom = moment(date);\n    //   alert(this.url);\n    if (comics) {\n      this.url.delete(\"comic\");\n      this.url.delete(\"provider\");\n      if (SAVE_AS_URL || doQuery) {\n        for (let comic of comics) {\n          this.url.append(\"comic\", comic.id);\n          this.url.append(\"provider\", comic.provider);\n        }\n      }\n      //const sanitize = m => m.replace(/,/g, \",,\").replace(/;/g, \" , \");\n      [\n        [\"id\", \"comic\"],\n        [\"provider\", \"provider\"],\n      ].forEach(([key, name]) => {\n        document.cookie =\n          name +\n          \"=\" +\n          escape(JSON.stringify(comics.map((comic) => comic[key])));\n      });\n    }\n    if (date) {\n      const dateStuff = [\n        [\"year\", \"YYYY\"],\n        [\"month\", \"M\"],\n        [\"day\", \"D\"],\n      ];\n      dateStuff.forEach(([part, format]) => {\n        const val = mom.format(format);\n        this.url.set(part, val);\n        document.cookie = `${part}=${val}`;\n      });\n    }\n    window.history.pushState(\n      date,\n      moment(date).format(\"MMMM D[,] YYYY\"),\n      \"?\" + this.url.toString()\n    );\n  }\n}\n","/*eslint-disable no-template-curly-in-string*/\n/*eslint-disable react/no-direct-mutation-state*/\n/*eslint-disable no-unused-vars*/\n/*eslint-disable jsx-a11y/alt-text*/\n/*eslint-disable no-mixed-operators*/\nimport React from \"react\";\nimport \"../../css/Editor.css\";\nimport Editor from \"react-json-editor-ajrm\";\nimport { API_URL } from \"../util\";\n\nclass App extends React.Component {\n  constructor(props) {\n    document.title = \"Editor\";\n    super(props);\n    this.state = {\n      currJson: {\n        id: \"\",\n        name: \"\",\n        \"series-ids\": [\"YYYY-MM-DD\"],\n        \"date-scrape\": [],\n        \"extremes-scrape\": {\n          first: [],\n          last: [],\n        },\n        \"get-name\": [],\n        \"src-to-url\": \"${src}\",\n        \"list-names\": [],\n      },\n      password: \"\",\n      output: {},\n      apiUrl: API_URL + \"/api/v1/\",\n    };\n    const search = new URLSearchParams(window.location.search);\n    const toEdit = search.get(\"edit\");\n    if (toEdit)\n      fetch(API_URL + \"/api/v1/\" + toEdit)\n        .then((res) => res.text())\n        .then((text) =>\n          this.setState({\n            currJson: JSON.parse(text.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")),\n          })\n        );\n  }\n\n  copyToClipboard() {\n    navigator.clipboard.writeText(JSON.stringify(this.state.currJson, null));\n  }\n\n  render() {\n    const editorProps = {\n      style: {\n        outerBox: {\n          flexGrow: \"1\",\n          height: \"100%\",\n        },\n        container: {\n          width: \"100%\",\n          height: \"100%\",\n        },\n      },\n      theme: \"light_mitsuketa_tribute\",\n    };\n    return (\n      <div className=\"Editor\">\n        Password:{\" \"}\n        <input\n          type=\"password\"\n          size=\"50\"\n          value={this.state.password}\n          onChange={(evt) =>\n            this.setState({\n              password: evt.target.value,\n            })\n          }\n        >\n          {\" \"}\n        </input>{\" \"}\n        <br />\n        API URL:{\" \"}\n        <input\n          type=\"text\"\n          size=\"50\"\n          value={this.state.apiUrl}\n          onChange={(evt) =>\n            this.setState({\n              apiUrl: evt.target.value,\n            })\n          }\n        >\n          {\" \"}\n        </input>{\" \"}\n        <br />\n        Query Path:{\" \"}\n        <input\n          type=\"text\"\n          size=\"50\"\n          value={this.state.query}\n          onChange={(evt) =>\n            this.setState({\n              query: evt.target.value,\n            })\n          }\n        >\n          {\" \"}\n        </input>{\" \"}\n        <input type=\"button\" value=\"Test\" onClick={() => this.runJSON()} />{\" \"}\n        <br />\n        <input\n          type=\"button\"\n          value=\"Copy to Clipboard\"\n          onClick={() => this.copyToClipboard()}\n        />{\" \"}\n        <div className=\"textarea-holder\">\n          <Editor\n            placeholder={this.state.currJson}\n            onChange={(evt) => {\n              this.state.tempJson = evt.jsObject;\n              this.state.tempStr = evt.json;\n            }}\n            {...editorProps}\n          />{\" \"}\n          <img\n            className=\"sample-image\"\n            src={this.state.output.url}\n            style={{\n              maxWidth: \"49vw\",\n              height: \"auto\",\n            }}\n          />{\" \"}\n          <Editor readOnly placeholder={this.state.output} {...editorProps} />>{\" \"}\n        </div>{\" \"}\n        <br />\n      </div>\n    );\n  }\n  async runJSON() {\n    try {\n      const parsed = this.state.tempJson || this.state.currJson;\n      this.setState({\n        currJson:\n          (this.state.tempStr &&\n            JSON.parse(this.state.tempStr.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) ||\n          this.state.tempJson,\n      });\n      const didPost = await (\n        await fetch(this.state.apiUrl + \"provider\", {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            json: parsed,\n            password: this.state.password,\n          }),\n        })\n      ).json();\n      const output = await (\n        await fetch(this.state.apiUrl + this.state.query)\n      ).json();\n      this.setState({\n        output: output || {},\n      });\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n}\n\nexport default App;\n","import \"./util\";\nimport \"core-js\";\nimport \"isomorphic-fetch\";\nimport React, { Component } from \"react\";\nimport Newspaper from \"./pages/Newspaper\";\nimport \"../css/App.css\";\nimport Editor from \"./pages/Editor\";\n\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/editor\">\n            <Editor />\n          </Route>{\" \"}\n          <Route path=\"/\">\n            <Newspaper />\n          </Route>{\" \"}\n        </Switch>{\" \"}\n      </Router>\n    ); //Temporary--until I make Treasury\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./js/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}